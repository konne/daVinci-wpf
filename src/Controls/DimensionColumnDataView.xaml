<UserControl
    x:Class="daVinci.Controls.DimensionColumnDataView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:LUIConverter="clr-namespace:leonardo.Converter;assembly=leonardo-wpf"
    xmlns:LuiAttached="clr-namespace:leonardo.AttachedProperties;assembly=leonardo-wpf"
    xmlns:LuiControls="clr-namespace:leonardo.Controls;assembly=leonardo-wpf"
    xmlns:converter="clr-namespace:daVinci.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:daViniciControls="clr-namespace:daVinci.Controls"
    xmlns:l="http://wpflocalizeextension.codeplex.com"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    l:LocalizeDictionary.DesignCulture="de"
    l:ResxLocalizationProvider.DefaultAssembly="qlik-resources"
    l:ResxLocalizationProvider.DefaultDictionary="Translate_client"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/leonardo-wpf;component/Styles/LUIStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <LUIConverter:BindingDiagConverter x:Key="BindingDiagConverter" />
            <LUIConverter:BooleanToVisibilityConverter
                x:Key="BoolToVisibilityCollapsedConverter"
                False="Collapsed"
                True="Visible" />
            <LUIConverter:BooleanToVisibilityConverter
                x:Key="TrueToCollapsedConverter"
                False="Visible"
                True="Collapsed" />
            <LUIConverter:BooleanToVisibilityConverter
                x:Key="TrueToVisibleConverter"
                False="Collapsed"
                True="Visible" />
            <converter:IntToVisibilityConverter
                x:Key="IntToVisibilityConverter"
                FalseValue="Collapsed"
                TrueValue="Visible" />

            <LUIConverter:NullOrEmptyToVisibilityConverter
                x:Key="VisibleOnEmpty"
                False="Visible"
                True="Visible" />

            <LUIConverter:NullOrEmptyToVisibilityConverter
                x:Key="VisibleOnNotEmpty"
                False="Visible"
                True="Visible" />
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel Margin="5,0,5,0">
        <LuiControls:LuiInputGroup
            Margin="0,10,0,5"
            IsInputEnabled="True"
            LabelText="{l:Loc Translate_common:Common_Field}"
            RightCommandForeground="{StaticResource LUI.Brush.ORANGE}"
            RightCommandIcon="lui_icon_expression"
            Text="{Binding FieldDef, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Visibility="{Binding IsExpression, Converter={StaticResource TrueToVisibleConverter}}" />
        <LuiControls:LuiInputGroup
            Margin="0,10,0,5"
            IsInputEnabled="true"
            LabelText="{l:Loc Translate_common:Common_Label}"
            RightCommandIcon="lui_icon_expression"
            Text="{Binding FieldLabel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Visibility="{Binding IsExpression, Converter={StaticResource TrueToVisibleConverter}}" />
        <LuiControls:LuiInputGroup
            Margin="0,10,0,5"
            IsInputEnabled="False"
            LabelText="{l:Loc Translate_common:Common_Dimension}"
            RightCommand="{Binding UnlinkCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=daViniciControls:DimensionColumnDataView}}"
            RightCommandIcon="lui_icon_link"
            Text="{Binding DimensionMeasure.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Visibility="{Binding IsExpression, Converter={StaticResource TrueToCollapsedConverter}}" />
        <LuiControls:LuiCheckbox
            Margin="0,15,0,15"
            Content="{l:Loc properties_dimensions_showNull}"
            Foreground="{StaticResource LUI.Brush.Grayscale50}"
            IsChecked="{Binding AllowNULLValues}" />
        <LuiControls:LuiCombobox
            Name="LimitCombo"
            Background="White"
            LabelText="{l:Loc properties_dimensionLimits_limit}"
            SelectedIndex="{Binding LimitModeIndex}">
            <ComboBoxItem Content="{l:Loc properties_dimensionLimits_none}" />
            <ComboBoxItem Content="{l:Loc properties_dimensionLimits_fixedNumber}" />
            <ComboBoxItem Content="{l:Loc properties_dimensionLimits_exactValue}" />
            <ComboBoxItem Content="{l:Loc properties_dimensionLimits_relativeValue}" />
        </LuiControls:LuiCombobox>

        <StackPanel
            x:Name="Feste_Spaltenanzahl"
            Margin="0,10,0,0"
            Visibility="{Binding SelectedIndex, ElementName=LimitCombo, Converter={StaticResource IntToVisibilityConverter}, ConverterParameter='1'}">
            <LuiControls:LuiButtonGroup SelectedIndex="{Binding TopBottomIndex}">
                <LuiControls:LuiToggleButton Content="{l:Loc Common_Top}" />
                <LuiControls:LuiToggleButton Content="{l:Loc Common_Bottom}" />
            </LuiControls:LuiButtonGroup>
            <LuiControls:LuiInputGroup
                Margin="0,10,0,0"
                RightCommandForeground="{StaticResource LUI.Brush.ORANGE}"
                RightCommandIcon="lui_icon_expression"
                Text="{Binding FixedColumnCountSize}" />
            <TextBlock
                Margin="0,10,0,0"
                FontFamily="{StaticResource QlikViewSans}"
                Text="Berechnet für Kennzahl: ???" />
        </StackPanel>

        <StackPanel
            x:Name="Genauer_Wert"
            Margin="0,10,0,0">
            <StackPanel.Visibility>
                <Binding
                    Converter="{StaticResource IntToVisibilityConverter}"
                    ConverterParameter="2,3"
                    ElementName="LimitCombo"
                    Path="SelectedIndex" />
            </StackPanel.Visibility>
            <LuiControls:LuiButtonGroup SelectedIndex="{Binding GreatherThanLessThanIndex}">
                <LuiControls:LuiToggleButton Content="&gt;=" />
                <LuiControls:LuiToggleButton Content="&gt;" />
                <LuiControls:LuiToggleButton Content="&lt;" />
                <LuiControls:LuiToggleButton Content="&lt;=" />
            </LuiControls:LuiButtonGroup>
            <LuiControls:LuiInputGroup
                Margin="0,10,0,0"
                RightCommandForeground="{StaticResource LUI.Brush.ORANGE}"
                RightCommandIcon="lui_icon_expression"
                Text="{Binding TextValue}" />
            <TextBlock
                Margin="0,10,0,0"
                FontFamily="{StaticResource QlikViewSans}"
                Text="Berechnet für Kennzahl: ???" />
        </StackPanel>
        <StackPanel Margin="0,10,0,0">
            <StackPanel.Visibility>
                <Binding
                    Converter="{StaticResource IntToVisibilityConverter}"
                    ConverterParameter="1,2,3"
                    ElementName="LimitCombo"
                    Path="SelectedIndex" />
            </StackPanel.Visibility>
            <LuiControls:LuiCheckbox
                Name="chkShowOthers"
                Content="{l:Loc properties_dimensionLimits_showOthers}"
                IsChecked="{Binding ShowOthers}" />
            <LuiControls:LuiInputGroup
                Margin="0,10,0,0"
                IsInputEnabled="False"
                LabelText="{l:Loc properties_dimensionLimits_othersLabel}"
                RightCommandIcon="lui_icon_expression"
                Text="{Binding OthersLabel}"
                Visibility="{Binding IsChecked, ElementName=chkShowOthers, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" />
        </StackPanel>
        <LuiControls:LuiInputGroup
            Margin="0,10,0,0"
            LabelText="{l:Loc Object_Table_Measure_BackgroundExpression}"
            RightCommandIcon="lui_icon_expression"
            Text="{Binding BackgroundColorExpression}" />

        <LuiControls:LuiInputGroup
            Margin="0,10,0,0"
            LabelText="{l:Loc Object_Table_Measure_ForegroundExpression}"
            RightCommandIcon="lui_icon_expression"
            Text="{Binding TextColorExpression}" />

        <daViniciControls:ContentSwitch
            Margin="0,10,0,0"
            CheckedText="{l:Loc Translate_common:Common_Auto}"
            IsChecked="{Binding TextAllignment}"
            TitleText="{l:Loc Translate_common:Common_Text_TextAlignment}"
            UnCheckedText="{l:Loc Translate_common:Common_Custom}">
            <daViniciControls:ContentSwitch.Content>
                <StackPanel />
            </daViniciControls:ContentSwitch.Content>
            <daViniciControls:ContentSwitch.UnCheckedContent>
                <LuiControls:LuiCombobox
                    Background="White"
                    SelectedIndex="{Binding AllignmentIndex}">
                    <ComboBoxItem Content="{l:Loc Translate_common:Common_Text_AlignLeft}" />
                    <ComboBoxItem Content="{l:Loc Translate_common:Common_Text_AlignRight}" />
                </LuiControls:LuiCombobox>
            </daViniciControls:ContentSwitch.UnCheckedContent>
        </daViniciControls:ContentSwitch>


        <LuiControls:LuiCombobox
            Name="representationCombo"
            Margin="0,10,0,0"
            Background="White"
            LabelText="{l:Loc Translate_common:Common_Appearance}"
            SelectedIndex="{Binding RepresentationIndex}">
            <ComboBoxItem Content="{l:Loc properties_textImage_responsive_text}" />
            <ComboBoxItem Content="{l:Loc Translate_common:Common_URL}" />
        </LuiControls:LuiCombobox>

        <LuiControls:LuiInputGroup
            Margin="0,7,0,0"
            LabelText="{l:Loc MediaTool_Toolbar_InsertUrlLink_Title}"
            RightCommandIcon="lui_icon_expression"
            Text="{Binding UrlLabel}"
            Visibility="{Binding SelectedIndex, ElementName=representationCombo, Converter={StaticResource IntToVisibilityConverter}, ConverterParameter='1'}" />


    </StackPanel>
</UserControl>
